# This workflow deploys the cloud functions to Firebase on manual dispatch.
# This version runs in the public repository and fetches the private repository first.

name: "[DEV] Deploy Cloud Functions"
on:
  workflow_dispatch:

concurrency:
  group: "${{ github.workflow }}-${{ github.ref }}"
  cancel-in-progress: true

env:
  BUN_VERSION: 1.2.22
  FIREBASE_PROJECT_ID: vimex-coursier-dev
  PRIVATE_REPO_URL: git@github.com:vimex-sarl/delivery.git
  PRIVATE_REPO_BRANCH: main

jobs:
  fetch-and-deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - name: Checkout public repository
        uses: actions/checkout@v4

      - name: Setup Git for private repository access
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "github-actions@github.com"

      - name: Clone private repository
        run: |
          # Create SSH key for private repo access
          mkdir -p ~/.ssh
          echo "${{ secrets.PRIVATE_REPO_SSH_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa

          # Add GitHub to known hosts
          ssh-keyscan github.com >> ~/.ssh/known_hosts

          # Clone private repository
          git clone $PRIVATE_REPO_URL private-repo
          cd private-repo
          git checkout $PRIVATE_REPO_BRANCH

      - name: Verify private repository structure
        run: |
          ls -la private-repo/
          echo "Private repository cloned successfully"

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: ${{ env.BUN_VERSION }}

      - name: Install dependencies
        run: bun i --frozen-lockfile
        working-directory: ./private-repo/backends/functions

      - name: Install Firebase CLI
        run: bun add -g firebase-tools
        working-directory: ./private-repo/backends/functions

      - name: Authenticate with Firebase
        id: auth
        uses: google-github-actions/auth@v2
        with:
          credentials_json: "${{ secrets.FIREBASE_SERVICE_ACCOUNT_VIMEX_COURSIER_DEV }}"

      - name: Setup Google Cloud
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ env.FIREBASE_PROJECT_ID }}

      - name: Create environment file
        run: |
          echo "OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY_DEV }}" > .env
          echo "STRIPE_SECRET_KEY=${{ secrets.STRIPE_SECRET_KEY_DEV }}" >> .env
          echo "STRIPE_WEBHOOK_SECRET_SELF_ACCOUNT=${{ secrets.STRIPE_WEBHOOK_SECRET_SELF_ACCOUNT_DEV }}" >> .env
          echo "STRIPE_WEBHOOK_SECRET_CONNECTED_ACCOUNT=${{ secrets.STRIPE_WEBHOOK_SECRET_CONNECTED_ACCOUNT_DEV }}" >> .env
          echo "AUTHENTICATE_DOT_COM_TOKEN=${{ secrets.AUTHENTICATE_DOT_COM_TOKEN_DEV }}" >> .env
          echo "AUTHENTICATE_DOT_COM_MEDALLION_ID=${{ secrets.AUTHENTICATE_DOT_COM_MEDALLION_ID_DEV }}" >> .env
          echo "SLACK_ALERT_CHANNEL_WEBHOOK_URL=${{ secrets.SLACK_ALERT_CHANNEL_WEBHOOK_URL_DEV }}" >> .env
          echo "SEND_GRID_API_KEY=${{ secrets.SEND_GRID_API_KEY_DEV }}" >> .env
          echo "TELEGRAM_BOT_TOKEN=${{ secrets.TELEGRAM_BOT_TOKEN }}" >> .env
          echo "TELEGRAM_CHAT_ID=${{ secrets.TELEGRAM_CHAT_ID_DEV }}" >> .env
          echo "SMTP_HOST=${{ secrets.SMTP_HOST }}" >> .env
          echo "SMTP_PORT=${{ secrets.SMTP_PORT }}" >> .env
          echo "SMTP_USER=${{ secrets.SMTP_USER }}" >> .env
          echo "SMTP_PASSWORD=${{ secrets.SMTP_PASSWORD }}" >> .env
          echo "PUBLIC_WEBAPP_URL=${{ vars.PUBLIC_WEBAPP_URL_DEV }}" >> .env
          echo "GOOGLE_MAPS_API_KEY_BACKEND=${{ secrets.GOOGLE_MAPS_API_KEY_BACKEND_DEV }}" >> .env
        working-directory: ./private-repo/backends/functions

      - name: Deploy Cloud Functions
        run: |
          firebase deploy --force --project "${{ env.FIREBASE_PROJECT_ID }}" \
          --only functions \
          -m "Deployment of cloud functions to dev environment from public repo" \
          --force
        working-directory: ./private-repo/backends/functions
